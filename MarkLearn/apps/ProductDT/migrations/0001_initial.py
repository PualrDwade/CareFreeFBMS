# Generated by Django 2.0.7 on 2018-09-13 10:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='HotelMsg',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='酒店id')),
                ('name', models.CharField(max_length=50, verbose_name='酒店名字')),
                ('score', models.CharField(blank=True, max_length=10, null=True, verbose_name='酒店评分')),
                ('hotel_price', models.CharField(max_length=10, verbose_name='酒店价格')),
                ('hotel_content', models.CharField(max_length=300, verbose_name='酒店简介')),
                ('scenic_id', models.CharField(max_length=100, null=True, verbose_name='所属景点')),
                ('img_url', models.CharField(blank=True, max_length=100, null=True, verbose_name='图片url')),
                ('hotel_link', models.CharField(max_length=100, verbose_name='酒店链接')),
                ('sell_num', models.CharField(max_length=50, verbose_name='酒店人气')),
                ('latest_time', models.CharField(max_length=100, verbose_name='最新情况')),
            ],
            options={
                'verbose_name': '酒店信息',
                'verbose_name_plural': '酒店信息',
            },
        ),
        migrations.CreateModel(
            name='Product_City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_id', models.CharField(max_length=100, verbose_name='供应城市')),
                ('product_price', models.CharField(max_length=10, verbose_name='对应价格')),
            ],
            options={
                'verbose_name': '产品供应表',
                'verbose_name_plural': '产品供应表',
            },
        ),
        migrations.CreateModel(
            name='Product_Senic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('senic_name', models.CharField(max_length=100, verbose_name='景点')),
            ],
            options={
                'verbose_name': '产品景点表',
                'verbose_name_plural': '产品景点表',
            },
        ),
        migrations.CreateModel(
            name='ProductMsg',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='产品id')),
                ('name', models.CharField(max_length=30, verbose_name='产品名称')),
                ('traver_days', models.CharField(max_length=10, verbose_name='行程天数')),
                ('product_type', models.CharField(choices=[('1', '自驾游'), ('2', '跟团游')], default='1', max_length=10, verbose_name='产品类型')),
                ('img_url', models.CharField(max_length=100, verbose_name='图片url')),
                ('product_link', models.CharField(max_length=100, verbose_name='产品链接')),
                ('score', models.CharField(blank=True, max_length=10, null=True, verbose_name='综合评分')),
                ('sell_num', models.CharField(blank=True, max_length=10, null=True, verbose_name='产品销量')),
                ('comments_num', models.CharField(max_length=10, verbose_name='评论数')),
                ('product_grade', models.CharField(max_length=10, verbose_name='产品等级')),
            ],
            options={
                'verbose_name': '产品信息',
                'verbose_name_plural': '产品信息',
            },
        ),
        migrations.CreateModel(
            name='StrategyMsg',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='攻略id')),
                ('title', models.CharField(max_length=100, verbose_name='标题')),
                ('link_url', models.CharField(max_length=100, verbose_name='攻略链接')),
                ('simple_content', models.CharField(max_length=1000, verbose_name='简介')),
                ('img_url', models.CharField(max_length=100, verbose_name='图片链接')),
                ('scenic_name', models.CharField(max_length=100, verbose_name='相关景点')),
            ],
            options={
                'verbose_name': '攻略信息',
                'verbose_name_plural': '攻略信息',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='供应商id')),
                ('name', models.CharField(max_length=30, verbose_name='供应商名称')),
                ('link_url', models.CharField(max_length=100, verbose_name='供应商网站链接')),
                ('cooperation_type', models.CharField(choices=[('1', '战略合作'), ('2', '广告代理'), ('3', '数据提供')], default='3', max_length=10, verbose_name='合作类型')),
            ],
            options={
                'verbose_name': '供应商',
                'verbose_name_plural': '供应商',
            },
        ),
        migrations.CreateModel(
            name='TicketsMsg',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='门票id')),
                ('scenic_name', models.CharField(max_length=50, null=True, verbose_name='景点')),
                ('ticket_content', models.CharField(blank=True, max_length=3000, null=True, verbose_name='门票描述')),
                ('scense_address', models.CharField(blank=True, max_length=100, null=True, verbose_name='场景地址')),
                ('ticket_price', models.CharField(blank=True, max_length=10, null=True, verbose_name='门票价格')),
                ('ticket_link', models.CharField(max_length=100, verbose_name='门票链接')),
                ('score', models.CharField(blank=True, max_length=10, null=True, verbose_name='评分')),
                ('img_url', models.CharField(blank=True, max_length=100, null=True, verbose_name='图片地址')),
                ('city_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='所属城市')),
                ('supplier_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ProductDT.Supplier', verbose_name='所属供应商')),
            ],
            options={
                'verbose_name': '门票信息',
                'verbose_name_plural': '门票信息',
            },
        ),
        migrations.AddField(
            model_name='strategymsg',
            name='supplier_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ProductDT.Supplier', verbose_name='供应商'),
        ),
        migrations.AddField(
            model_name='productmsg',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ProductDT.Supplier', verbose_name='供应商'),
        ),
        migrations.AddField(
            model_name='product_senic',
            name='product_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ProductDT.ProductMsg', verbose_name='产品id'),
        ),
        migrations.AddField(
            model_name='product_city',
            name='product_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ProductDT.ProductMsg', verbose_name='产品id'),
        ),
        migrations.AddField(
            model_name='hotelmsg',
            name='supplier_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ProductDT.Supplier', verbose_name='供应商'),
        ),
        migrations.AlterUniqueTogether(
            name='product_city',
            unique_together={('product_id', 'city_id')},
        ),
    ]
